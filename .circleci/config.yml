version: 2.1

executors:
  jdk:
    docker:
      - image: cimg/openjdk:8.0
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    environment:
      JAVA_TOOL_OPTIONS: -XX:MaxRAMPercentage=90.0
      TERM: dumb
    working_directory: /tmp

commands:
  cache_dependencies:
    parameters:
      path:
        description: repo directory
        type: string
    steps:
      # cache downloaded dependencies
      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.sbt
            - ~/.cache/coursier/v1
          key: v1-deps--{{ checksum "<< parameters.path >>/build.sbt" }}

  download_cached_dependencies:
    parameters:
      path:
        description: repo directory
        type: string
    steps:
      # Download cached dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "<< parameters.path >>/build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-deps-

  save_test_results:
    parameters:
      path:
        description: repo directory
        type: string
    steps:
      - store_test_results:
          path: << parameters.path >>/target/junit/2.12
      - store_test_results:
          path: << parameters.path >>/target/junit/2.13
      - store_test_results:
          path: << parameters.path >>/target/junit/3

  run_tests_in_project:
    parameters:
      path:
        description: repo directory
        type: string
      project:
        description: repo directory
        type: string
    steps:
      - run:
          name: Test
          command: cat /dev/null | sbt "project << parameters.project >>" +test +it:test
          when: always
          working_directory: << parameters.path >>
      - save_test_results:
          path: << parameters.path >>

  setup_gpg:
    steps:
      # set required GPG_TTY
      - run: echo 'export GPG_TTY=$(tty)' >> $BASH_ENV
      # import public key
      - run: echo $GPG_PUBLIC_KEY | base64 --decode | gpg --import --batch --no-tty --yes
      # import private key
      - run: echo $GPG_PRIVATE_KEY | base64 --decode | gpg --import --batch --no-tty --yes

jobs:

  build:
    resource_class: large
    executor:
      name: jdk
    steps:
      - run:
          name: Create workspace directory
          command: mkdir -p workspace/repo
      - checkout:
          path: workspace/repo
      - download_cached_dependencies:
          path: workspace/repo
      - run:
          name: Style check
          command: cat /dev/null | sbt scalafmtSbtCheck +scalafmtCheckAll +it:scalafmtCheckAll
          working_directory: workspace/repo
      - run:
          name: Compile
          command: cat /dev/null | sbt +test:compile +it:compile +doc
          working_directory: workspace/repo
      - cache_dependencies:
          path: workspace/repo
      - persist_to_workspace:
          root: workspace
          paths:
            - repo

  test:
    resource_class: large
    executor:
      name: jdk
    parameters:
      project:
        type: string
    steps:
      - attach_workspace:
          at: workspace
      - download_cached_dependencies:
          path: workspace/repo
      - run_tests_in_project:
          path: workspace/repo
          project: << parameters.project >>

  release:
    resource_class: large
    executor:
      name: jdk
    steps:
      - attach_workspace:
          at: workspace
      - download_cached_dependencies:
          path: workspace/repo
      - setup_gpg
      - run:
          name: Sign & publish artifacts
          command: cat /dev/null | sbt +publish
          working_directory: workspace/repo
      - run:
          name: Release on Sonatype
          command: cat /dev/null | sbt sonatypeReleaseAll
          working_directory: workspace/repo
      - cache_dependencies:
          path: workspace/repo

workflows:
  version: 2

  only-build:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - test:
          name: test_core
          project: core
          requires:
            - build
      - test:
          name: test_akka
          project: akka
          requires:
            - build
      - test:
          name: test_fs2
          project: fs2
          requires:
            - build
      - test:
          name: test_scala_pb
          project: scalaPB
          requires:
            - build

  build-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          name: test_core
          project: core
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          name: test_akka
          project: akka
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          name: test_fs2
          project: fs2
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          name: test_scala_pb
          project: scalaPB
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release:
          requires:
            - test_core
            - test_akka
            - test_fs2
            - test_scala_pb
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
